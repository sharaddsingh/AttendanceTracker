rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read/write their own user documents
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read/write their own profile documents
    match /profiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated faculty to read/write their own faculty documents
    match /faculty/{facultyId} {
      allow read, write: if request.auth != null && request.auth.uid == facultyId;
    }
    
    // Allow authenticated users to read/write their own attendance documents
    match /attendances/{docId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || request.auth.uid == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userId);
    }
    
    // Allow students to create leave requests and faculty to read/update them
    match /leaveRequests/{requestId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         exists(/databases/$(database)/documents/faculty/$(request.auth.uid)));
      allow update: if request.auth != null && 
        exists(/databases/$(database)/documents/faculty/$(request.auth.uid));
    }
    
    // Allow notifications - simplified rules for testing
    match /notifications/{notificationId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create, write: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Deny all other operations
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
